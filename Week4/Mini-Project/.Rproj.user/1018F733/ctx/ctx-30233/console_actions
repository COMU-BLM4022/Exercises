{
    "type": [
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        3,
        3,
        2,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        3,
        3,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        3,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        3,
        2
    ],
    "data": [
        "\nR version 4.3.3 (2024-02-29 ucrt) -- \"Angel Food Cake\"\nCopyright (C) 2024 The R Foundation for Statistical Computing\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\n\nR özgür bir yazılımdır ve KESİNLİKLE BİR GARANTİ VERMEZ.\nBelli koşullar altında tekrar dağıtımına izin verilir.\nDağıtım detayları için 'license()' ya da 'licence()' girin.\n\nR, bir çok insanın katkıda bulunduğu ortak bir projedir\nDaha fazla bilgi için 'contributors()' girin.\nYayınlarda R veya R paketlerinden alıntı yapmak ",
        "için 'citation()' girin.\n\nBirkaç örnek için 'demo()', çevrimiçi yardım için 'help()' veya\nHTML tarayıcılı yardımı açmak için 'help.start()' girin.\nR'den çıkmak için 'q()' girin.\n\n",
        "> ",
        "# Excel dosyasındaki ham verileri data.frame formatında R'a ithal edin",
        "> ",
        "# havaK <- <kodu tamamla>",
        "> ",
        "#  <kodu tamamla>",
        "> ",
        "library(dygraphs)",
        "Error in library(dygraphs) : there is no package called ‘dygraphs’\n",
        "> ",
        "install.packages(\"dygraphs\")",
        "WARNING: Rtools is required to build R packages but is not currently installed. Please download and install the appropriate version of Rtools before proceeding:\n\nhttps://cran.rstudio.com/bin/windows/Rtools/\nInstalling package into ‘C:/Users/User/AppData/Local/R/win-library/4.3’\n(as ‘lib’ is unspecified)\nalso installing the dependencies ‘htmlwidgets’, ‘zoo’, ‘xts’\n\nURL 'https://cran.rstudio.com/bin/windows/contrib/4.3/htmlwidgets_1.6.4.zip' deneniyor\nContent type 'application/zip' length ",
        "812304 bytes (793 KB)\ndownloaded 793 KB\n\nURL 'https://cran.rstudio.com/bin/windows/contrib/4.3/zoo_1.8-12.zip' deneniyor\nContent type 'application/zip' length 1020755 bytes (996 KB)\ndownloaded 996 KB\n\nURL 'https://cran.rstudio.com/bin/windows/contrib/4.3/xts_0.13.2.zip' deneniyor\nContent type 'application/zip' length 851813 bytes (831 KB)\ndownloaded 831 KB\n\nURL 'https://cran.rstudio.com/bin/windows/contrib/4.3/dygraphs_1.1.1.6.zip' deneniyor\nContent type 'application/zip' length 443381 bytes (432 KB)\ndownlo",
        "aded 432 KB\n\n",
        "package ‘htmlwidgets’ successfully unpacked and MD5 sums checked\npackage ‘zoo’ successfully unpacked and MD5 sums checked\npackage ‘xts’ successfully unpacked and MD5 sums checked\npackage ‘dygraphs’ successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\User\\AppData\\Local\\Temp\\Rtmpk9hmfx\\downloaded_packages\n",
        "> ",
        "library(dygraphs)",
        "> ",
        "install.packages(\"readxl\")",
        "WARNING: Rtools is required to build R packages but is not currently installed. Please download and install the appropriate version of Rtools before proceeding:\n\nhttps://cran.rstudio.com/bin/windows/Rtools/\nInstalling package into ‘C:/Users/User/AppData/Local/R/win-library/4.3’\n(as ‘lib’ is unspecified)\nalso installing the dependencies ‘utf8’, ‘rematch’, ‘fansi’, ‘pillar’, ‘pkgconfig’, ‘crayon’, ‘hms’, ‘prettyunits’, ‘cellranger’, ‘tibble’, ‘cpp11’, ‘pro",
        "gress’\n\nURL 'https://cran.rstudio.com/bin/windows/contrib/4.3/utf8_1.2.4.zip' deneniyor\nContent type 'application/zip' length 149810 bytes (146 KB)\ndownloaded 146 KB\n\nURL 'https://cran.rstudio.com/bin/windows/contrib/4.3/rematch_2.0.0.zip' deneniyor\nContent type 'application/zip' length 19073 bytes (18 KB)\ndownloaded 18 KB\n\nURL 'https://cran.rstudio.com/bin/windows/contrib/4.3/fansi_1.0.6.zip' deneniyor\nContent type 'application/zip' length 314149 bytes (306 KB)\ndownloaded 306 KB\n\nURL 'https://cran.rstudi",
        "o.com/bin/windows/contrib/4.3/pillar_1.9.0.zip' deneniyor\nContent type 'application/zip' length 659411 bytes (643 KB)\ndownloaded 643 KB\n\nURL 'https://cran.rstudio.com/bin/windows/contrib/4.3/pkgconfig_2.0.3.zip' deneniyor\nContent type 'application/zip' length 22548 bytes (22 KB)\ndownloaded 22 KB\n\nURL 'https://cran.rstudio.com/bin/windows/contrib/4.3/crayon_1.5.2.zip' deneniyor\nContent type 'application/zip' length 162346 bytes (158 KB)\ndownloaded 158 KB\n\nURL 'https://cran.rstudio.com/bin/windows/contrib/4.3",
        "/hms_1.1.3.zip' deneniyor\nContent type 'application/zip' length 104293 bytes (101 KB)\ndownloaded 101 KB\n\nURL 'https://cran.rstudio.com/bin/windows/contrib/4.3/prettyunits_1.2.0.zip' deneniyor\nContent type 'application/zip' length 157831 bytes (154 KB)\ndownloaded 154 KB\n\nURL 'https://cran.rstudio.com/bin/windows/contrib/4.3/cellranger_1.1.0.zip' deneniyor\nContent type 'application/zip' length 103961 bytes (101 KB)\ndownloaded 101 KB\n\nURL 'https://cran.rstudio.com/bin/windows/contrib/4.3/tibble_3.2.1.zip' dene",
        "niyor\nContent type 'application/zip' length 690612 bytes (674 KB)\ndownloaded 674 KB\n\nURL 'https://cran.rstudio.com/bin/windows/contrib/4.3/cpp11_0.4.7.zip' deneniyor\nContent type 'application/zip' length 304070 bytes (296 KB)\ndownloaded 296 KB\n\nURL 'https://cran.rstudio.com/bin/windows/contrib/4.3/progress_1.2.3.zip' deneniyor\nContent type 'application/zip' length 87767 bytes (85 KB)\ndownloaded 85 KB\n\nURL 'https://cran.rstudio.com/bin/windows/contrib/4.3/readxl_1.4.3.zip' deneniyor\nContent type 'application",
        "/zip' length 1197225 bytes (1.1 MB)\ndownloaded 1.1 MB\n\n",
        "package ‘utf8’ successfully unpacked and MD5 sums checked\npackage ‘rematch’ successfully unpacked and MD5 sums checked\npackage ‘fansi’ successfully unpacked and MD5 sums checked\npackage ‘pillar’ successfully unpacked and MD5 sums checked\npackage ‘pkgconfig’ successfully unpacked and MD5 sums checked\npackage ‘crayon’ successfully unpacked and MD5 sums checked\npackage ‘hms’ successfully unpacked and MD5 sums checked\npackage ‘prettyunits’ successfully unpacked and MD5 sums check",
        "ed\npackage ‘cellranger’ successfully unpacked and MD5 sums checked\npackage ‘tibble’ successfully unpacked and MD5 sums checked\npackage ‘cpp11’ successfully unpacked and MD5 sums checked\npackage ‘progress’ successfully unpacked and MD5 sums checked\npackage ‘readxl’ successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\User\\AppData\\Local\\Temp\\Rtmpk9hmfx\\downloaded_packages\n",
        "> ",
        "library(readxl)",
        "> ",
        "library(readxl)",
        "> ",
        "havaK<-readxl::read_xlsx(\"Veri Detayları28.03.2024 15_11_29.xlsx\",skip=1)",
        "Hata: `path` does not exist: ‘Veri Detaylarጒ8.03.2024 15_11_29.xlsx’\n",
        "> ",
        "library(readxl)",
        "> ",
        "havaK<-readxl::read_xlsx(\"D:\\sytem\\indirilenler\\Veri Detayları31.03.2024 17_08_59.xlsx\",skip=1)",
        "Hata: '\\s' is an unrecognized escape in character string (<input>:1:30)\n",
        "> ",
        "library(readxl)",
        "> ",
        "havaK<-readxl::read_xlsx(\"Veri Detayları31.03.2024 17_08_59.xlsx\",skip=1)",
        "Hata: `path` does not exist: ‘Veri Detaylarጓ1.03.2024 17_08_59.xlsx’\n",
        "> ",
        "library(readxl)",
        "> ",
        "havaK<-readxl::read_xlsx(\"Veri Detayları31.03.2024 17_08_59.xlsx\",skip=1)",
        "Hata: `path` does not exist: ‘Veri Detaylarጓ1.03.2024 17_08_59.xlsx’\n",
        "> ",
        "library(readxl)",
        "> ",
        "havaK<-readxl::read_xlsx(\"Veri Detayları31.03.2024 17_08_59.xlsx\",skip=1)",
        "Hata: `path` does not exist: ‘Veri Detaylarጓ1.03.2024 17_08_59.xlsx’\n",
        "> ",
        "library(readxl)",
        "> ",
        "havaK<-readxl::read_xlsx(\"Veri Detayları31.03.2024 17_08_59.xlsx\",skip=1)",
        "Hata: `path` does not exist: ‘Veri Detaylarጓ1.03.2024 17_08_59.xlsx’\n",
        "> ",
        "library(readxl)",
        "> ",
        "havaK<-readxl::read_xlsx(\"Veri Detayları31.03.2024 17_08_59.xlsx\",skip=1)",
        "Hata: `path` does not exist: ‘Veri Detaylarጓ1.03.2024 17_08_59.xlsx’\n",
        "> ",
        "library(readxl)",
        "> ",
        "havaK<-readxl::read_xlsx(\"Veri Detayları31.03.2024 17_08_59.xlsx\",skip=1)",
        "Hata: `path` does not exist: ‘Veri Detaylarጓ1.03.2024 17_08_59.xlsx’\n",
        "> ",
        "library(readxl)",
        "> ",
        "havaK<-readxl::read_xlsx(\"Veri Detayları31.03.2024 17_08_59.xlsx\",skip=1)",
        "Hata: `path` does not exist: ‘Veri Detaylarጓ1.03.2024 17_08_59.xlsx’\n",
        "> ",
        "> ",
        "library(readxl)",
        "> ",
        "havaK<-readxl::read_xlsx(\"Veri Detayları31.03.2024 17_08_59.xlsx\",skip=1)",
        "Hata: `path` does not exist: ‘Veri Detaylarጓ1.03.2024 17_08_59.xlsx’\n",
        "> ",
        "library(readxl)",
        "> ",
        "Veri_Detaylari31_03_2024_17_08_59 <- read_excel(\"Veri Detaylari31.03.2024 17_08_59.xlsx\")",
        "\u001B[1m\u001B[22mNew names:\n\u001B[36m•\u001B[39m `` -> `...3`\n",
        "> ",
        "View(Veri_Detaylari31_03_2024_17_08_59)",
        "> ",
        "library(readxl)",
        "> ",
        "havaK<-readxl::read_xlsx(\"Veri Detayları31.03.2024 17_08_59.xlsx\",skip=1)",
        "Hata: `path` does not exist: ‘Veri Detaylarጓ1.03.2024 17_08_59.xlsx’\n",
        "> ",
        "library(readxl)",
        "> ",
        "havaK<-readxl::read_xlsx(\"Veri Detaylari31.03.2024 17_08_59.xlsx\",skip=1)",
        "> ",
        "library(readxl)",
        "> ",
        "havaK<-readxl::read_xlsx(\"Veri Detaylari31.03.2024 17_08_59.xlsx\",skip=1)",
        "> ",
        "print(havaK)",
        "> ",
        "library(readxl)",
        "> ",
        "havaK<-readxl::read_xlsx(\"Veri Detaylari31.03.2024 17_08_59.xlsx\",skip=1)",
        "> ",
        "colnames(havaK)[1] <- \"Time\"",
        "> ",
        "colnames(havaK)[1] <- \"Time\"",
        "> ",
        "print(havaK)",
        "> ",
        "havaK[-which(names(havaK) == \"Time\")] <- lapply(havaK[-which(names(havaK) == \"Time\")], function(x) {",
        "+ ",
        "  # Sayısal olmayan karakterleri ve boşlukları temizle  ",
        "+ ",
        "  x <- gsub(\"[^0-9,]\", \"\", x)",
        "+ ",
        "  # Ondalık ayırıcıları noktaya çevir",
        "+ ",
        "  x <- gsub(\",\", \".\", x)",
        "+ ",
        "  # Sayısal değerlere dönüştür",
        "+ ",
        "  as.numeric(x)",
        "+ ",
        "})",
        "> ",
        "havaK[-which(names(havaK) == \"Time\")] <- lapply(havaK[-which(names(havaK) == \"Time\")], function(x) {",
        "+ ",
        "  # Sayısal olmayan karakterleri ve boşlukları temizle  ",
        "+ ",
        "  x <- gsub(\"[^0-9,]\", \"\", x)",
        "+ ",
        "  # Ondalık ayırıcıları noktaya çevir",
        "+ ",
        "  x <- gsub(\",\", \".\", x)",
        "+ ",
        "  # Sayısal değerlere dönüştür",
        "+ ",
        "  as.numeric(x)",
        "+ ",
        "})",
        "> ",
        "print(havaK)",
        "> ",
        "havaK[-which(names(havaK) == \"Time\")] <- lapply(havaK[-which(names(havaK) == \"Time\")], function(x) {",
        "+ ",
        "  x <- gsub(\",\", \".\", x)",
        "+ ",
        "  # Sayısal değerlere dönüştür",
        "+ ",
        "  as.numeric(x)",
        "+ ",
        "})",
        "> ",
        "print(havaK)",
        "> ",
        "havaK[-which(names(havaK) == \"Time\")] <- lapply(havaK[-which(names(havaK) == \"Time\")], function(x) {",
        "+ ",
        "  x <- gsub(\",\", \".\", x)",
        "+ ",
        "  # Sayısal değerlere dönüştür",
        "+ ",
        "  as.numeric(x)",
        "+ ",
        "})",
        "> ",
        "print(havaK)",
        "> ",
        "havaK[-which(names(havaK) == \"Time\")] <- lapply(havaK[-which(names(havaK) == \"Time\")], function(x) {",
        "+ ",
        "    x <- gsub(\",\", \".\", x)",
        "+ ",
        "    x <- as.numeric(x)",
        "+ ",
        "})",
        "> ",
        "print(havaK)",
        "> ",
        "havaK[-which(names(havaK) == \"Time\")] <- lapply(havaK[-which(names(havaK) == \"Time\")], function(x) {",
        "+ ",
        "    x <- gsub(\",\", \".\", x)",
        "+ ",
        "    x <- as.numeric(x)",
        "+ ",
        "})",
        "> ",
        "print(x)",
        "Hata: 'x' nesnesi bulunamadı\n",
        "> ",
        "havaK[-which(names(havaK) == \"Time\")] <- lapply(havaK[-which(names(havaK) == \"Time\")], function(x) {",
        "+ ",
        "    x <- gsub(\",\", \".\", x)",
        "+ ",
        "    x <- as.numeric(x)",
        "+ ",
        "})",
        "> ",
        "print(havaK)",
        "> ",
        "havaK[-which(names(havaK) == \"Time\")] <- lapply(havaK[-which(names(havaK) == \"Time\")], function(x) {",
        "+ ",
        "  # Sayısal olmayan karakterleri ve boşlukları temizle  ",
        "+ ",
        "  x <- gsub(\"[^0-9,]\", \"\", x)",
        "+ ",
        "  # Ondalık ayırıcıları noktaya çevir",
        "+ ",
        "  x <- gsub(\",\", \".\", x)",
        "+ ",
        "  # Sayısal değerlere dönüştür",
        "+ ",
        "  as.numeric(x)",
        "+ ",
        "})",
        "> ",
        " ",
        "> ",
        "head(havaK, 10)",
        "> ",
        "havaK[, -which(names(havaK) == \"Time\")] <- lapply(havaK[, -which(names(havaK) == \"Time\")], function(x) {",
        "+ ",
        "  # Sayısal olmayan karakterleri ve boşlukları temizle  ",
        "+ ",
        "  x <- gsub(\"[^0-9,]\", \"\", x)",
        "+ ",
        "  # Ondalık ayırıcıları noktaya çevir",
        "+ ",
        "  x <- gsub(\",\", \".\", x)",
        "+ ",
        "  # Sayısal değerlere dönüştür",
        "+ ",
        "  as.numeric(x)",
        "+ ",
        "})",
        "> ",
        "> ",
        "head(havaK, 10)",
        "> ",
        "havaK[, -which(names(havaK) == \"Time\")] <- lapply(havaK[, -which(names(havaK) == \"Time\")], function(x) {",
        "+ ",
        "  # Sayısal olmayan karakterleri ve boşlukları temizle  ",
        "+ ",
        "  x <- gsub(\"[^0-9,]\", \"\", x)",
        "+ ",
        "  # Ondalık ayırıcıları noktaya çevir",
        "+ ",
        "  x <- gsub(\",\", \".\", x)",
        "+ ",
        "  # Sayısal değerlere dönüştür",
        "+ ",
        "  as.numeric(x)",
        "+ ",
        "})",
        "> ",
        "> ",
        "head(havaK, 10)",
        "> ",
        "havaK[, -which(names(havaK) == \"Time\")] <- lapply(havaK[, -which(names(havaK) == \"Time\")], function(x) {",
        "+ ",
        "  # Sayısal olmayan karakterleri ve boşlukları temizle  ",
        "+ ",
        "  x <- gsub(\"[^0-9,]\", \"\", x)",
        "+ ",
        "  # Ondalık ayırıcıları noktaya çevir",
        "+ ",
        "  x <- gsub(\",\", \".\", x)",
        "+ ",
        "  # Sayısal değerlere dönüştür",
        "+ ",
        "  ",
        "+ ",
        "})",
        "> ",
        "> ",
        "head(havaK, 10)",
        "> ",
        "havaK[, -which(names(havaK) == \"Time\")] <- lapply(havaK[, -which(names(havaK) == \"Time\")], function(x) {",
        "+ ",
        "  # Sayısal olmayan karakterleri ve boşlukları temizle  ",
        "+ ",
        "  x <- gsub(\"[^0-9,]\", \"\", x)",
        "+ ",
        "  # Ondalık ayırıcıları noktaya çevir",
        "+ ",
        "  x <- gsub(\",\", \".\",x)",
        "+ ",
        "  # Sayısal değerlere dönüştür",
        "+ ",
        "  as.numeric(x)",
        "+ ",
        "})",
        "> ",
        "> ",
        "head(havaK, 10)",
        "> ",
        "havaK[, -which(names(havaK) == \"Time\")] <- lapply(havaK[, -which(names(havaK) == \"Time\")], function(x) {",
        "+ ",
        "  # Sayısal olmayan karakterleri ve boşlukları temizle  ",
        "+ ",
        "  x <- gsub(\"[^0-9,]\", \"\", x)",
        "+ ",
        "  # Ondalık ayırıcıları noktaya çevir",
        "+ ",
        "  x <- gsub(\",\", \".\",x)",
        "+ ",
        "  # Sayısal değerlere dönüştür",
        "+ ",
        "  as.numeric(x)",
        "+ ",
        "})",
        "> ",
        "> ",
        "head(havaK, 10)",
        "> ",
        "havaK[, -which(names(havaK) == \"Time\")] <- lapply(havaK[, -which(names(havaK) == \"Time\")], function(x) {",
        "+ ",
        "  # Sayısal olmayan karakterleri ve boşlukları temizle  ",
        "+ ",
        "  x <- gsub(\"[^0-9,]\", \" \", x)",
        "+ ",
        "  # Ondalık ayırıcıları noktaya çevir",
        "+ ",
        "  x <- gsub(\",\", \".\",x)",
        "+ ",
        "  # Sayısal değerlere dönüştür",
        "+ ",
        "  as.numeric(x)",
        "+ ",
        "})",
        "> ",
        "> ",
        "head(havaK, 10)",
        "> ",
        "havaK[, -which(names(havaK) == \"Time\")] <- lapply(havaK[, -which(names(havaK) == \"Time\")], function(x) {",
        "+ ",
        "  # Sayısal olmayan karakterleri ve boşlukları temizle  ",
        "+ ",
        "  x <- gsub(\"[^0-9,]\", \"\", x)",
        "+ ",
        "  # Ondalık ayırıcıları noktaya çevir",
        "+ ",
        "  x <- gsub(\",\", \" \",x)",
        "+ ",
        "  # Sayısal değerlere dönüştür",
        "+ ",
        "  as.numeric(x)",
        "+ ",
        "})",
        "> ",
        "> ",
        "head(havaK, 10)",
        "> ",
        "havaK[, -which(names(havaK) == \"Time\")] <- lapply(havaK[, -which(names(havaK) == \"Time\")], function(x) {",
        "+ ",
        "  # Sayısal olmayan karakterleri ve boşlukları temizle  ",
        "+ ",
        "  x <- gsub(\"[^0-9,]\", \"\", x)",
        "+ ",
        "  # Ondalık ayırıcıları noktaya çevir",
        "+ ",
        "  x <- gsub(\",\", \"a\",x)",
        "+ ",
        "  # Sayısal değerlere dönüştür",
        "+ ",
        "  as.numeric(x)",
        "+ ",
        "})",
        "> ",
        "> ",
        "head(havaK, 10)",
        "> ",
        "havaK[, -which(names(havaK) == \"Time\")] <- lapply(havaK[, -which(names(havaK) == \"Time\")], function(x) {",
        "+ ",
        "  # Sayısal olmayan karakterleri ve boşlukları temizle  ",
        "+ ",
        "  x <- gsub(\"[^0-9,]\", \"\", x)",
        "+ ",
        "  # Ondalık ayırıcıları noktaya çevir",
        "+ ",
        "  x <- gsub(\",\", \"7\",x)",
        "+ ",
        "  # Sayısal değerlere dönüştür",
        "+ ",
        "  as.numeric(x)",
        "+ ",
        "})",
        "> ",
        "> ",
        "head(havaK, 10)",
        "> ",
        "havaK[, -which(names(havaK) == \"Time\")] <- lapply(havaK[, -which(names(havaK) == \"Time\")], function(x) {",
        "+ ",
        "  # Sayısal olmayan karakterleri ve boşlukları temizle  ",
        "+ ",
        "  x <- gsub(\"[^0-9,]\", \"\", x)",
        "+ ",
        "  # Ondalık ayırıcıları noktaya çevir",
        "+ ",
        "  x <- gsub(\",\", \"7\",x)",
        "+ ",
        "  # Sayısal değerlere dönüştür",
        "+ ",
        "  as.numeric(x)",
        "+ ",
        "})",
        "> ",
        "> ",
        "head(havaK, 10)",
        "> ",
        "havaK[, -which(names(havaK) == \"Time\")] <- lapply(havaK[, -which(names(havaK) == \"Time\")], function(x) {",
        "+ ",
        "  # Sayısal olmayan karakterleri ve boşlukları temizle  ",
        "+ ",
        "  x <- gsub(\"[^0-9,]\", \"\", x)",
        "+ ",
        "  # Ondalık ayırıcıları noktaya çevir",
        "+ ",
        "  x <- gsub(\",\", \".\",x)",
        "+ ",
        "  # Sayısal değerlere dönüştür",
        "+ ",
        "  as.numeric(x)",
        "+ ",
        "})",
        "> ",
        "> ",
        "head(havaK, 10)",
        "> ",
        "havaK[, -which(names(havaK) == \"Time\")] <- lapply(havaK[, -which(names(havaK) == \"Time\")], function(x) {",
        "+ ",
        "  # Sayısal olmayan karakterleri ve boşlukları temizle  ",
        "+ ",
        "  x <- gsub(\"[^0-9,]\", \"\", x)",
        "+ ",
        "  # Ondalık ayırıcıları noktaya çevir",
        "+ ",
        "  x <- gsub(\",\", \".\",x)",
        "+ ",
        "  # Sayısal değerlere dönüştür",
        "+ ",
        "  as.numeric(x)",
        "+ ",
        "})",
        "> ",
        "> ",
        "head(havaK, 10)",
        "> ",
        "havaK[, -which(names(havaK) == \"Time\")] <- lapply(havaK[, -which(names(havaK) == \"Time\")], function(x) {",
        "+ ",
        "  # Sayısal olmayan karakterleri ve boşlukları temizle  ",
        "+ ",
        "  x <- gsub(\"[^0-9,]\", \"\", x)",
        "+ ",
        "  # Ondalık ayırıcıları noktaya çevir",
        "+ ",
        "  x <- gsub(\",\", \".\",x)",
        "+ ",
        "  # Sayısal değerlere dönüştür",
        "+ ",
        "  as.numeric(x)",
        "+ ",
        "})",
        "> ",
        "> ",
        "head(havaK, 10)",
        "> ",
        "havaK[, -which(names(havaK) == \"Time\")] <- lapply(havaK[, -which(names(havaK) == \"Time\")], function(x) {",
        "+ ",
        "  # Sayısal olmayan karakterleri ve boşlukları temizle  ",
        "+ ",
        "  x <- gsub(\"[^0-9,]\", \"\", x)",
        "+ ",
        "  # Ondalık ayırıcıları noktaya çevir",
        "+ ",
        "  x <- gsub(\",\", \".\",x)",
        "+ ",
        "  # Sayısal değerlere dönüştür",
        "+ ",
        "  as.numeric(x)",
        "+ ",
        "})",
        "> ",
        "> ",
        "head(havaK, 10)",
        "> ",
        "havaK[, -which(names(havaK) == \"Time\")] <- lapply(havaK[, -which(names(havaK) == \"Time\")], function(x) {",
        "+ ",
        "  # Sayısal olmayan karakterleri ve boşlukları temizle  ",
        "+ ",
        "  x <- gsub(\"[^0-9,]\", \"\", x)",
        "+ ",
        "  # Ondalık ayırıcıları noktaya çevir",
        "+ ",
        "  x <- gsub(\",\", \".\",x)",
        "+ ",
        "  # Sayısal değerlere dönüştür",
        "+ ",
        "  as.numeric(x)",
        "+ ",
        "})",
        "> ",
        "> ",
        "head(havaK, 10)",
        "> ",
        "havaK[-which(names(havaK) == \"Time\")] <- lapply(havaK[-which(names(havaK) == \"Time\")], function(x) {",
        "+ ",
        "  # Sayısal olmayan karakterleri ve boşlukları temizle  ",
        "+ ",
        "  x <- gsub(\"[^0-9,]\", \"\", x)",
        "+ ",
        "  # Ondalık ayırıcıları noktaya çevir",
        "+ ",
        "  x <- gsub(\",\", \".\", x)",
        "+ ",
        "  # Sayısal değerlere dönüştür",
        "+ ",
        "  as.numeric(x)",
        "+ ",
        "})",
        "> ",
        "> ",
        "head(havaK, 10)",
        "> ",
        "library(dplyr)",
        "Error in library(dplyr) : there is no package called ‘dplyr’\n",
        "> ",
        "install.packages(\"dplyr\")",
        "WARNING: Rtools is required to build R packages but is not currently installed. Please download and install the appropriate version of Rtools before proceeding:\n\nhttps://cran.rstudio.com/bin/windows/Rtools/\nInstalling package into ‘C:/Users/User/AppData/Local/R/win-library/4.3’\n(as ‘lib’ is unspecified)\nalso installing the dependencies ‘withr’, ‘generics’, ‘tidyselect’\n\nURL 'https://cran.rstudio.com/bin/windows/contrib/4.3/withr_3.0.0.zip' deneniyor\nContent type 'application/zip' length ",
        "245901 bytes (240 KB)\ndownloaded 240 KB\n\nURL 'https://cran.rstudio.com/bin/windows/contrib/4.3/generics_0.1.3.zip' deneniyor\nContent type 'application/zip' length 79793 bytes (77 KB)\ndownloaded 77 KB\n\nURL 'https://cran.rstudio.com/bin/windows/contrib/4.3/tidyselect_1.2.1.zip' deneniyor\nContent type 'application/zip' length 225131 bytes (219 KB)\ndownloaded 219 KB\n\nURL 'https://cran.rstudio.com/bin/windows/contrib/4.3/dplyr_1.1.4.zip' deneniyor\nContent type 'application/zip' length 1558956 bytes (1.5 MB)\ndown",
        "loaded 1.5 MB\n\n",
        "package ‘withr’ successfully unpacked and MD5 sums checked\npackage ‘generics’ successfully unpacked and MD5 sums checked\npackage ‘tidyselect’ successfully unpacked and MD5 sums checked\npackage ‘dplyr’ successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\User\\AppData\\Local\\Temp\\Rtmpk9hmfx\\downloaded_packages\n",
        "> ",
        "library(dplyr)",
        "\nAttaching package: ‘dplyr’\n\nThe following objects are masked from ‘package:stats’:\n\n    filter, lag\n\nThe following objects are masked from ‘package:base’:\n\n    intersect, setdiff, setequal, union\n\n",
        "> ",
        "library(dplyr)",
        "> ",
        " ",
        "> ",
        "> ",
        "havaK <- havaK %>%",
        "+ ",
        "  mutate(across(-1, ~as.numeric(gsub(\",\", \".\", .))))",
        "> ",
        "havaK <- havaK[-1, ]",
        "> ",
        "head(havaK, 10)",
        "> ",
        "library(dplyr)",
        "> ",
        " ",
        "> ",
        "> ",
        "havaK <- havaK %>%",
        "+ ",
        "  mutate(across(-1, ~as.numeric(gsub(\",\", \".\", .))))",
        "> ",
        "havaK <- havaK[-1, ]",
        "> ",
        "head(havaK, 10)",
        "> ",
        "havaK_numeric[, -which(names(havaK) == \"Time\")] = lapply(havaK[, -which(names(havaK) == \"Time\")], function(x) as.numeric(gsub(\",\", \".\", x)))",
        "Hata: 'havaK_numeric' nesnesi bulunamadı\n",
        "> ",
        "library(dplyr)",
        "> ",
        " ",
        "> ",
        "> ",
        "havaK <- havaK %>%",
        "+ ",
        "  mutate(across(-1, ~as.numeric(gsub(\",\", \".\", .))))",
        "> ",
        "havaK <- havaK[-1, ]",
        "> ",
        "head(havaK, 10)",
        "> ",
        "library(readxl)",
        "> ",
        "havaK<-readxl::read_xlsx(\"Veri Detaylari31.03.2024 17_08_59.xlsx\",skip=1)",
        "> ",
        "colnames(havaK)[1] <- \"Time\"",
        "> ",
        "print(havaK)",
        "> ",
        "library(dplyr)",
        "> ",
        " ",
        "> ",
        "> ",
        "havaK <- havaK %>%",
        "+ ",
        "  mutate(across(-1, ~as.numeric(gsub(\",\", \".\", .))))",
        "> ",
        "havaK <- havaK[-1, ]",
        "> ",
        "head(havaK, 10)",
        "\nRestarting R session...\n\n",
        "> ",
        "install.packages(\"dygraphs\")",
        "WARNING: Rtools is required to build R packages but is not currently installed. Please download and install the appropriate version of Rtools before proceeding:\n\nhttps://cran.rstudio.com/bin/windows/Rtools/\nInstalling package into ‘C:/Users/User/AppData/Local/R/win-library/4.3’\n(as ‘lib’ is unspecified)\nURL 'https://cran.rstudio.com/bin/windows/contrib/4.3/dygraphs_1.1.1.6.zip' deneniyor\nContent type 'application/zip' length 443381 bytes (432 KB)\ndownloaded 432 KB\n\n",
        "package ‘dygraphs’ successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\User\\AppData\\Local\\Temp\\Rtmp0QgCrk\\downloaded_packages\n",
        "> ",
        "library(dygraphs)",
        "> ",
        "library(dygraphs)",
        "> ",
        "#  <kodu tamamla>",
        "> ",
        "library(dygraphs)",
        "> ",
        "havaK_xts <- xts(havaK[, c(2, 3)], order.by=havaK$Time)",
        "Error in xts(havaK[, c(2, 3)], order.by = havaK$Time) : \n  \"xts\" fonksiyonu bulunamadı\n",
        "> ",
        "install.packages(\"xts\")",
        "WARNING: Rtools is required to build R packages but is not currently installed. Please download and install the appropriate version of Rtools before proceeding:\n\nhttps://cran.rstudio.com/bin/windows/Rtools/\nInstalling package into ‘C:/Users/User/AppData/Local/R/win-library/4.3’\n(as ‘lib’ is unspecified)\nURL 'https://cran.rstudio.com/bin/windows/contrib/4.3/xts_0.13.2.zip' deneniyor\nContent type 'application/zip' length 851813 bytes (831 KB)\ndownloaded 831 KB\n\n",
        "package ‘xts’ successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\User\\AppData\\Local\\Temp\\Rtmp0QgCrk\\downloaded_packages\n",
        "> ",
        "library(xts)",
        "Zorunlu paket yükleniyor: zoo\n\nAttaching package: ‘zoo’\n\nThe following objects are masked from ‘package:base’:\n\n    as.Date, as.Date.numeric\n\n",
        "> ",
        "library(dygraphs)",
        "> ",
        "havaK_xts <- xts(havaK[, c(2, 3)], order.by=havaK$Time)",
        "> ",
        "  # Oluşturulan xts nesnesi için dygraph oluşturma",
        "> ",
        "  dygraph(havaK_xts) %>%",
        "+ ",
        "  #Sırası ile renkler  ",
        "+ ",
        "  dyOptions(colors = c(\"blue\", \"red\")) %>%",
        "+ ",
        "  #Sol  ",
        "+ ",
        "  dyAxis(\"y\", label = \"PM 2.5 ( µg/m3 )\") %>%",
        "+ ",
        "  #Sağ  ",
        "+ ",
        "  dyAxis(\"y2\", label = \"SO2 ( µg/m3 )\", independentTicks = TRUE) %>%",
        "+ ",
        "  dySeries(names(havaK_xts)[2], axis = 'y2')",
        "Error in gsub(\"</\", \"\\\\u003c/\", payload, fixed = TRUE) : \n  giriş dizesi 1 bir geçersiz UTF-8\n",
        "> ",
        "library(dygraphs)",
        "> ",
        "havaK_xts <- xts(havaK[, c(2, 3)], order.by=havaK$Time)",
        "> ",
        "  # Oluşturulan xts nesnesi için dygraph oluşturma",
        "> ",
        "  dygraph(havaK_xts) %>%",
        "+ ",
        "  #Sırası ile renkler  ",
        "+ ",
        "  dyOptions(colors = c(\"blue\", \"red\")) %>%",
        "+ ",
        "  #Sol  ",
        "+ ",
        "  dyAxis(\"y\", label = \"PM 2.5 ( ug/m3 )\") %>%",
        "+ ",
        "  #Sağ  ",
        "+ ",
        "  dyAxis(\"y2\", label = \"SO2 ( ug/m3 )\", independentTicks = TRUE) %>%",
        "+ ",
        "  dySeries(names(havaK_xts)[2], axis = 'y2')",
        "> ",
        " ",
        "> ",
        "print(havaK)",
        "> ",
        "library(dygraphs)",
        "> ",
        "# Rename columns to remove special characters",
        "> ",
        "colnames(havaK) <- c(\"Time\", \"PM10\", \"PM2.5\", \"SO2\", \"NO2\", \"NOX\", \"NO\", \"O3\")",
        "Error in names(x) <- value : \n  'names! özelliği [8] vektör ile aynı uzunlukta olmalıdır [3]\n",
        "> ",
        "library(dygraphs)",
        "> ",
        "# Rename columns to remove special characters",
        "> ",
        "colnames(havaK) <- c(\"Time\", \"PM10\", \"PM2.5\")",
        "> ",
        " ",
        "> ",
        "# Convert 'Time' column to POSIXct format",
        "> ",
        "havaK$Time <- as.POSIXct(havaK$Time)",
        "> ",
        " ",
        "> ",
        "# Convert other columns to numeric, replacing commas with dots",
        "> ",
        "havaK[-1] <- lapply(havaK[-1], function(x) as.numeric(gsub(\",\", \".\", x)))",
        "> ",
        " ",
        "> ",
        "# Plot the data",
        "> ",
        "plot_ly(havaK, x = ~Time) %>%",
        "+ ",
        "  add_lines(y = ~PM10, name = \"PM10 (µg/m³)\", color = I(\"blue\")) %>%",
        "+ ",
        "  add_lines(y = ~PM2.5, name = \"PM2.5 (µg/m³)\", color = I(\"red\")) %>%",
        "+ ",
        "  layout(title = \"PM10 and PM2.5 Values\",",
        "+ ",
        "         xaxis = list(title = \"Time\"),",
        "+ ",
        "         yaxis = list(title = \"Value (µg/m³)\"))",
        "Error in layout(., title = \"PM10 and PM2.5 Values\", xaxis = list(title = \"Time\"),  : \n  unused arguments (title = \"PM10 and PM2.5 Values\", xaxis = list(title = \"Time\"), yaxis = list(title = \"Value (�g/m�)\"))\n",
        "> ",
        "library(dygraphs)",
        "> ",
        "# Rename columns to remove special characters",
        "> ",
        "colnames(havaK) <- c(\"Time\", \"PM10\", \"SO2\")",
        "> ",
        " ",
        "> ",
        "# Convert 'Time' column to POSIXct format",
        "> ",
        "havaK$Time <- as.POSIXct(havaK$Time)",
        "> ",
        " ",
        "> ",
        "# Convert other columns to numeric, replacing commas with dots",
        "> ",
        "havaK[-1] <- lapply(havaK[-1], function(x) as.numeric(gsub(\",\", \".\", x)))",
        "> ",
        " ",
        "> ",
        "# Plot the data",
        "> ",
        "plot_ly(havaK, x = ~Time) %>%",
        "+ ",
        "  add_lines(y = ~PM10, name = \"PM10 (µg/m³)\", color = I(\"blue\")) %>%",
        "+ ",
        "  add_lines(y = ~PM2.5, name = \"PM2.5 (µg/m³)\", color = I(\"red\")) %>%",
        "+ ",
        "  layout(title = \"PM10 and PM2.5 Values\",",
        "+ ",
        "         xaxis = list(title = \"Time\"),",
        "+ ",
        "         yaxis = list(title = \"Value (µg/m³)\"))",
        "Error in layout(., title = \"PM10 and PM2.5 Values\", xaxis = list(title = \"Time\"),  : \n  unused arguments (title = \"PM10 and PM2.5 Values\", xaxis = list(title = \"Time\"), yaxis = list(title = \"Value (�g/m�)\"))\n",
        "> ",
        "library(dygraphs)",
        "> ",
        "# Rename columns to remove special characters",
        "> ",
        "colnames(havaK) <- c(\"Time\", \"PM10\", \"SO2\")",
        "> ",
        " ",
        "> ",
        "# Convert 'Time' column to POSIXct format",
        "> ",
        "havaK$Time <- as.POSIXct(havaK$Time)",
        "> ",
        " ",
        "> ",
        "# Convert other columns to numeric, replacing commas with dots",
        "> ",
        "havaK[-1] <- lapply(havaK[-1], function(x) as.numeric(gsub(\",\", \".\", x)))",
        "> ",
        " ",
        "> ",
        "# Plot the data",
        "> ",
        "plot_ly(havaK, x = ~Time) %>%",
        "+ ",
        "  add_lines(y = ~PM10, name = \"PM10 (ug/m³)\", color = I(\"blue\")) %>%",
        "+ ",
        "  add_lines(y = ~PM2.5, name = \"SO2 (ug/m³)\", color = I(\"red\")) %>%",
        "+ ",
        "  layout(title = \"PM10 and PM2.5 Values\",",
        "+ ",
        "         xaxis = list(title = \"Time\"),",
        "+ ",
        "         yaxis = list(title = \"Value (µg/m³)\"))",
        "Error in layout(., title = \"PM10 and PM2.5 Values\", xaxis = list(title = \"Time\"),  : \n  unused arguments (title = \"PM10 and PM2.5 Values\", xaxis = list(title = \"Time\"), yaxis = list(title = \"Value (�g/m�)\"))\n",
        "> ",
        "library(dygraphs)",
        "> ",
        "# Rename columns to remove special characters",
        "> ",
        "colnames(havaK) <- c(\"Time\", \"PM10\", \"SO2\")",
        "> ",
        " ",
        "> ",
        "# Convert 'Time' column to POSIXct format",
        "> ",
        "havaK$Time <- as.POSIXct(havaK$Time)",
        "> ",
        " ",
        "> ",
        "# Convert other columns to numeric, replacing commas with dots",
        "> ",
        "havaK[-1] <- lapply(havaK[-1], function(x) as.numeric(gsub(\",\", \".\", x)))",
        "> ",
        " ",
        "> ",
        "# Plot the data",
        "> ",
        "plot_ly(havaK, x = ~Time) %>%",
        "+ ",
        "  add_lines(y = ~PM10, name = \"PM10 (ug/m³)\", color = I(\"blue\")) %>%",
        "+ ",
        "  add_lines(y = ~PM2.5, name = \"SO2 (ug/m³)\", color = I(\"red\")) %>%",
        "+ ",
        "  layout(title = \"PM10 and PM2.5 Values\",",
        "+ ",
        "         xaxis = list(title = \"Time\"),",
        "+ ",
        "         yaxis = list(title = \"Value (µg/m³)\"))",
        "Error in layout(., title = \"PM10 and PM2.5 Values\", xaxis = list(title = \"Time\"),  : \n  unused arguments (title = \"PM10 and PM2.5 Values\", xaxis = list(title = \"Time\"), yaxis = list(title = \"Value (�g/m�)\"))\n",
        "> ",
        "library(dygraphs)",
        "> ",
        "# Rename columns to remove special characters",
        "> ",
        "colnames(havaK) <- c(\"Time\", \"PM10\", \"SO2\")",
        "> ",
        " ",
        "> ",
        "# Convert 'Time' column to POSIXct format",
        "> ",
        "havaK$Time <- as.POSIXct(havaK$Time)",
        "> ",
        " ",
        "> ",
        "# Convert other columns to numeric, replacing commas with dots",
        "> ",
        "havaK[-1] <- lapply(havaK[-1], function(x) as.numeric(gsub(\",\", \".\", x)))",
        "> ",
        " ",
        "> ",
        "# Plot the data",
        "> ",
        "plot_ly(havaK, x = ~Time) %>%",
        "+ ",
        "  add_lines(y = ~PM10, name = \"PM10 (ug/m³)\", color = I(\"blue\")) %>%",
        "+ ",
        "  add_lines(y = ~SO2, name = \"SO2 (ug/m³)\", color = I(\"red\")) %>%",
        "+ ",
        "  layout(title = \"PM10 and PM2.5 Values\",",
        "+ ",
        "         xaxis = list(title = \"Time\"),",
        "+ ",
        "         yaxis = list(title = \"Value (µg/m³)\"))",
        "Error in layout(., title = \"PM10 and PM2.5 Values\", xaxis = list(title = \"Time\"),  : \n  unused arguments (title = \"PM10 and PM2.5 Values\", xaxis = list(title = \"Time\"), yaxis = list(title = \"Value (�g/m�)\"))\n",
        "> ",
        "library(dygraphs)",
        "> ",
        "# Rename columns to remove special characters",
        "> ",
        "colnames(havaK) <- c(\"Time\", \"PM10\", \"SO2\")",
        "> ",
        " ",
        "> ",
        "# Convert 'Time' column to POSIXct format",
        "> ",
        "havaK$Time <- as.POSIXct(havaK$Time)",
        "> ",
        " ",
        "> ",
        "# Convert other columns to numeric, replacing commas with dots",
        "> ",
        "havaK[-1] <- lapply(havaK[-1], function(x) as.numeric(gsub(\",\", \".\", x)))",
        "> ",
        " ",
        "> ",
        "# Plot the data",
        "> ",
        "plot_ly(havaK, x = ~Time) %>%",
        "+ ",
        "  add_lines(y = ~PM10, name = \"PM10 (ug/m³)\", color = I(\"blue\")) %>%",
        "+ ",
        "  add_lines(y = ~SO2, name = \"SO2 (ug/m³)\", color = I(\"red\")) %>%",
        "+ ",
        "  layout(title = \"PM10 and PM2.5 Values\",",
        "+ ",
        "         xaxis = list(title = \"Time\"),",
        "+ ",
        "         yaxis = list(title = \"Value (ug/m³)\"))",
        "Error in layout(., title = \"PM10 and PM2.5 Values\", xaxis = list(title = \"Time\"),  : \n  unused arguments (title = \"PM10 and PM2.5 Values\", xaxis = list(title = \"Time\"), yaxis = list(title = \"Value (ug/m�)\"))\n",
        "> ",
        "install.packages(\"dygraphs\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "library(dygraphs)",
        "> ",
        "data_subset <- havaK[, c(\"Time\", \"SO2\", \"CO\")]",
        "Error in `[.data.frame`(havaK, , c(\"Time\", \"SO2\", \"CO\")) : \n  undefined columns selected\n",
        "\nRestarting R session...\n\n"
    ]
}